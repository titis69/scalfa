#!/bin/bash
RED="\033[0;31m"
BRED="\033[1;31m"
YELLOW="\033[33m"
BLUE="\033[36m"
FONT="\033[0m"
NC='\033[0m'
Blue="\033[0;34m"
bblue="\033[1;34m"
green='\033[0;32m'
pr="\033[0;95m"
YELL='\033[0;33m'
white='\033[0;37m'
bwhite='\033[1;37m'
#pro1= '\033[1;93m'
#pro2= '\033[96;1m'
COLOR1='\033[0;35m'

###########################################################
# Valid Script
ipsaya=$(curl -sS ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="https://raw.githubusercontent.com/titis69/permission/main/alfa"
checking_sc() {
  useexp=$(wget -qO- $data_ip | grep $ipsaya | awk '{print $3}')
  if [[ $date_list < $useexp ]]; then
    echo -ne
  else
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e "\033[42m          404 NOT FOUND AUTOSCRIPT          \033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e ""
    echo -e "            \033[91;1mPERMISSION DENIED !\033[0m"
    echo -e "   \033[0;33mYour VPS\033[0m $ipsaya \033[0;33mHas been Banned\033[0m"
    echo -e "     \033[0;33mBuy access permissions for scripts\033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    exit
  fi
}
checking_sc
MYIP=$(curl -sS ipv4.icanhazip.com)
######################################
#IPVPS=$(curl -s ipv4.icanhazip.com)
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')

cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )



uptime="$(uptime -p | cut -d " " -f 2-10)"
#cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
#cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
#cpu_usage+=" %"
# // Gettings Info
function print_install() {
echo -e "${green} =============================== ${FONT}"
echo -e "${YELLOW} # $1 ${FONT}"
echo -e "${green} =============================== ${FONT}"
sleep 1
}
function print_success() {
if [[ 0 -eq $? ]]; then
echo -e "${green} =============================== ${FONT}"
echo -e "${Green} # $1 berhasil dipasang"
echo -e "${green} =============================== ${FONT}"
sleep 2
fi
}
function Rename() {
clear
echo -e "${YELLOW}----------------------------------------------------------${NC}"
echo -e "\033[96;1m                      Welcome To Script BERLIAN            \033[0m"
echo -e "${YELLOW}----------------------------------------------------------${NC}"
echo ""
sleep 3
echo -e "    ----------------------------------"
echo -e "   |\e[1;32mPlease Select a Options \e[0m|"
echo -e "    ----------------------------------"
echo -e "     \e[1;32m1)\e[0m Rename Script"
echo -e "     \e[1;32m2)\e[0m Default "
echo -e "   ------------------------------------"
read -p "   Please select numbers 1-2 or Any Button(Default) : " host
echo ""
if [[ $host == "1" ]]; then
clear
echo ""
echo ""
echo -e "   \e[1;36m_______________________________$NC"
echo -e "   \e[1;32m      CHANGES NAME SCRIPT $NC"
echo -e "   \e[1;36m_______________________________$NC"
echo -e ""
read -p "   INPUT YOUR NAME :   " host1
read -p "   INPUT PAS ADMIN :   " host11
rm /etc/xray/username
if [[ $host11 == 123admin ]]; then
echo $host1 >> /etc/xray/username
echo ""
clear
print_success "Rename Script"
sleep 3
menu
else
echo "BERLIAN" >> /etc/xray/username
clear
echo -e "${RED} Mohon Maaf Sepertinya Anda Bukan Owner ${NC}"
sleep 3
clear
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e "\033[42m          404 NOT FOUND AUTOSCRIPT          \033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e ""
    echo -e "            \033[91;1mPERMISSION DENIED !\033[0m"
    echo -e "     \033[0;33mBuy access permissions for scripts\033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    read -p "Press any key for exit"
    clear
    sleep 1
    print_success "Script Name Default"
    sleep 3
    menu
fi
elif [[ $host == "2" ]]; then
rm /etc/xray/username
echo "BERLIAN" >> /etc/xray/username
clear
print_success "Script Name Default"
sleep 3
menu
fi
}
######################################
# // USERNAME IZIN IPP
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/titis69/permission/main/alfa | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/titis69/permission/main/alfa | grep $MYIP | awk '{print $3}')
echo "$valid" > /usr/bin/e
izinsc="https://raw.githubusercontent.com/titis69/permission/main/alfa"
clear
######################################
# // DETAIL ORDER IZIN IP
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
######################################
clear
# // DAYS LEFT
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
#certifacate=$(((d1 - d2) / 86400))
############################
# Status Expired Or Active
Info="(${green}Active${NC})"
Error="(${RED}Expired${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl ${izinsc} | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
clear
######################################
# // GETTINGS SYSTEM
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

clear
######################################
# // RUNNING SSH
######################################
if [[ $ssh_service == "running" ]]; then 
   status_ssh="\033[0;32mON${NC}"
else
   status_ssh="\033[0;31mOFF${NC} "
fi
######################################
# // RUNNING WEBSOCKET
######################################
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="\033[0;32mON${NC}"
else
    status_ws_epro="\033[0;31mOFF${NC} "
fi
######################################
# RUNNING HAPROXY
######################################
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="\033[0;32mON${NC}"
else
   status_haproxy="\033[0;31mOFF${NC} "
fi
######################################
# RUNNING XRAY
######################################
if [[ $xray_service == "running" ]]; then 
   status_xray="\033[0;32mON${NC}"
else
   status_xray="\033[0;31mOFF${NC} "
fi
######################################
# RUNNING NGINX
######################################
if [[ $nginx_service == "running" ]]; then 
   status_nginx="\033[0;32mON${NC}"
else
   status_nginx="\033[0;31mOFF${NC} "
fi
######################################
# RUNNING DROPBEAR
######################################
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="\033[0;32mGOOD${NC}"
else
   status_dropbear="\033[0;31mCRAZY${NC} "
fi

# \\ Vless account //
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vless=$vlx/2
# \\ Vmess account //
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vmess=$vmc/2
# \\ Trojan account //
total_ssh="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
# \\ shadowsocks account //
ssx=$(grep -c -E "^#!# " "/etc/xray/config.json")
let ssa=$ssx/2
# //jumlah_noobz=$(grep -c -E "^### " "/etc/xray/noob")
# // DENISA | NB PROJECT
# // WHATSAPP : 082380835972
# // TELEGRAM : @denisastore32
# // VNSTAT
#LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
#cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
#cpu_usage="$((${cpu_usage1/\.*} / ${corediilik:-1}))"
#cpu_usage+=" %"
DATE2=$(date -R | cut -d " " -f -5)
DATEVPS=$(date +'%d-%m-%Y')
TIMEZONE=$(printf '%(%H-%M-%S)T')
vnstat_profile=$(vnstat | sed -n '3p' | awk '{print $1}' | grep -o '[^:]*')
vnstat -i ${vnstat_profile} >/etc/t1
bulan=$(date +%b)
tahun=$(date +%y)
ba=$(curl -s https://pastebin.com/raw/0gWiX6hE)
today=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
todayd=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
today_v=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $9}')
today_rx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $2}')
today_rxv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $3}')
today_tx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $5}')
today_txv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $6}')
if [ "$(grep -wc ${bulan} /etc/t1)" != '0' ]; then
bulan=$(date +%b)
month=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $9}')
month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $10}')
month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $3}')
month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $4}')
month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $6}')
month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $7}')
else
bulan2=$(date +%Y-%m)
month=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $8}')
month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $9}')
month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $2}')
month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $3}')
month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $5}')
month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $6}')
fi
if [ "$(grep -wc yesterday /etc/t1)" != '0' ]; then
yesterday=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $8}')
yesterday_v=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $9}')
yesterday_rx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $2}')
yesterday_rxv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $3}')
yesterday_tx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $5}')
yesterday_txv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $6}')
else
yesterday=NULL
yesterday_v=NULL
yesterday_rx=NULL
yesterday_rxv=NULL
yesterday_tx=NULL
yesterday_txv=NULL
fi
stat_noobz=$( systemctl status noobzvpns | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $stat_noobz == "running" ]]; then
    stat_noobz="\033[97;1mON${NC}"
else
    stat_noobz="\033[91;1mOFF${NC}"
    systemctl start noobzvpns
fi

function Newbie_Banner() {
clear
echo -e " \033[96;1m╭════════════════════════════════════════════════════════╮${NC}"
echo -e " \e[96;1m│\e[0m \033[1;37m                    $(cat /etc/xray/username)                       "
echo -e " \033[96;1m╰════════════════════════════════════════════════════════╯${NC}"
}



function Service_System_Operating() {
echo -e " \033[96;1m      ══════════════════════════════════════════════${NC}"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ DATE & TIME  \033[1;37m: ${WH}$DATE2 WIB${NC}"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ OS           \033[1;37m: $(cat /etc/os-release | grep -w ID | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/ID//g')     \033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ RAM          \033[1;37m: $(free -m | awk 'NR==2 {print $2}')    \033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ UPTIME       \033[1;37m: $(uptime -p | cut -d " " -f 2-10)\033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ ISP          \033[1;37m: $(cat /etc/xray/isp)    \033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ CITY         \033[1;37m: ${WH}$(cat /etc/xray/city)"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ CPU          \033[1;37m: \033[1;37m$CORE Core "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ IP VPS       \033[1;37m: \033[1;37m$MYIP${NC}"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ DOMAIN       \033[1;37m: $(cat /etc/xray/domain)"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ CLIENTS      \033[1;37m: $(cat /usr/bin/user)"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ MASA AKTIF   \033[1;37m: \033[0m\033[1;37m$(((d1 - d2) / 86400)) Hari /\033[0m \033[1;37m$useexp "
echo -e " \033[96;1m      ══════════════════════════════════════════════${NC}"
}



echo -e " ${NC} ╭════════════════════════════════════════════════════════════════╮"
echo -e " ${NC} │${bwhite}\033[41m                   Welcome To Script $(cat /etc/xray/username)                    ${NC}│"
echo -e " ${NC} ╰════════════════════════════════════════════════════════════════╯"
echo -e " $COLOR1 ╭════════════════════════════════════════════════════════════════╮"
echo -e " $COLOR1 │$BRED ● ${bblue}SYSTEM OS ${bwhite}   : ${NC}$MODEL${NC}"
echo -e " $COLOR1 │$BRED ● ${bblue}SERVER RAM ${bwhite}  : ${NC}$tram / $uram MB ${NC}"
echo -e " $COLOR1 │$BRED ● ${bblue}TIME ${bwhite}        : ${green}$TIMEZONE WIB"
echo -e " $COLOR1 │$BRED ● ${bblue}DATE  ${bwhite}       : ${NC}$DATEVPS${NC}"
echo -e " $COLOR1 │$BRED ● ${bblue}UPTIME ${bwhite}      : ${NC}$(uptime -p | cut -d " " -f 2-10)\033[0m ${NC}"
echo -e " $COLOR1 │$BRED ● ${bblue}IP VPS ${bwhite}      : ${NC}$MYIP${NC}"
echo -e " $COLOR1 │$BRED ● ${bblue}DOMAIN ${bwhite}      : ${NC}$(cat /etc/xray/domain)${NC}"
echo -e " $COLOR1 │$BRED ● ${bblue}CITY ${bwhite}        : ${NC}$(cat /etc/xray/city)${NC}"
echo -e " $COLOR1 ╰════════════════════════════════════════════════════════════════╯$NC"
echo -e " \033[96;1m               <<<>>> ${bwhite}INFORMATION ACCOUNT \033[96;1m<<<>>>"
#echo -e " ${NC}         ══════════════════════════════════════════════════${NC}" | lolcat
echo -e "                  ${bwhite} SSH/OPENVPN/UDP  $YELL=$NC $total_ssh $NC Accounts"
echo -e "                  ${bwhite} VMESS/WS/GRPC    $YELL=$NC $vmess $NC Accounts"
echo -e "                  ${bwhite} VLESS/WS/GRPC    $YELL=$NC $vless $NC Accounts"
echo -e "                  ${bwhite} TROJAN/WS/GRPC   $YELL=$NC $trb $NC Accounts"
echo -e "                  ${bwhite} SHADOW/WS/GRPC   $YELL=$NC $ssa $NC Accounts"
#echo -e " ${NC}         ══════════════════════════════════════════════════${NC}" | lolcat
echo -e " "
echo -e " \033[96;1m               <<<>>> ${bwhite}PENGUNAAN BANDWIDTH \033[96;1m<<<>>>"
#echo -e " ${NC}         ══════════════════════════════════════════════════${NC}" | lolcat
#echo -e "                            \033[96;1mBANDWIDTH USED${NC}"
echo -e "                  ${bwhite} HARI INI        $YELL =${NC} $today_tx ${NC}$today_txv${NC}"
echo -e "                  ${bwhite} KEMARIN         $YELL =${NC} $yesterday_tx ${NC}$yesterday_txv${NC}"
echo -e "                  ${bwhite} BULAN INI       $YELL =${NC} $month_tx ${NC}$month_txv${NC}"
#echo -e " ${NC}         ══════════════════════════════════════════════════${NC}" | lolcat
echo -e " ${NC} ╭════════════════════╮╭════════════════════╮╭════════════════════╮$NC"
echo -e " ${NC} │${bwhite} SSH      : $status_ssh        ${bwhite} NGINX  : $status_nginx          ${bwhite} HAPROXY   : $status_haproxy      ${NC}"
echo -e " ${NC} │${bwhite} WS-ePro  : $status_ws_epro        ${bwhite} XRAY   : $status_xray          ${bwhite} DROPBEAR  : $status_dropbear      ${NC}"
echo -e " ${NC} ╰════════════════════╯╰════════════════════╯╰════════════════════╯$NC"
echo -e " $COLOR1 ╭════════════════════════════════════════════════════════════════╮"
echo -e " $COLOR1 │$NC [${BRED}01$NC]${YELL} SSH                       $COLOR1│ $NC[${BRED}05$NC]${YELL} SS             $COLOR1│"
echo -e " $COLOR1 │$NC [${BRED}02$NC]${YELL} VMESS                     $COLOR1│ $NC[${BRED}06$NC]${YELL} CRTE SLOW DNS  $COLOR1│"
echo -e " $COLOR1 │$NC [${BRED}03$NC]${YELL} VLESS                     $COLOR1│ $NC[${BRED}07$NC]${YELL} NOBZVPN        $COLOR1│"
echo -e " $COLOR1 │$NC [${BRED}04$NC]${YELL} TROJAN                    $COLOR1│ $NC[${BRED}08$NC]${YELL} SETTING        $COLOR1│" 
echo -e " $COLOR1 ╰════════════════════════════════════════════════════════════════╯"
echo -e " ${NC} ╭════════════════════════════════════════════════════════════════╮"
echo -e " ${NC} │${bwhite} Clients Name  :${NC} $(cat /usr/bin/user)"                     
echo -e " ${NC} │${bwhite} Masa Aktif    :${YELL} $(((d1 - d2) / 86400)) Hari${NC}/${YELL}$useexp $sts"       
# // echo -e " ${NC} │${bwhite} versi    :$(cat /opt/.ver) Last Update ${NC}" 
echo -e " ${NC} ╰════════════════════════════════════════════════════════════════╯"
echo -e " "
read -p "  Options [ 1 - 8 ] ❱❱❱ " opt
echo -e ""
case $opt in
1 | 01)
clear     
m-sshws
;;
2 | 02)
clear
m-vmess
;;
3 | 03)
clear
m-vless
;;
4 | 04)
clear
m-trojan
;;
5 | 05)
clear
m-ssws
;;
6 | 06)
clear
sd
;;
7 | 07)
clear
m-noob
;;
8 | 08)
clear
menu-x
;;

0 | 00)
exit
;;
x)
menu
;;
*) clear ;
menu
;;
esac
