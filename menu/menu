#!/bin/bash
Green="\e[92;1m"
RED="\033[1;31m"
YELLOW="\033[33m"
BLUE="\033[36m"
FONT="\033[0m"
GREENBG="\033[42;37m"
REDBG="\033[41;37m"
NC='\e[0m'
# Valid Script
ipsaya=$(curl -sS ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="https://raw.githubusercontent.com/titis69/permission/main/alfa"
checking_sc() {
  useexp=$(wget -qO- $data_ip | grep $ipsaya | awk '{print $3}')
  if [[ $date_list < $useexp ]]; then
    echo -ne
  else
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e "\033[42m          404 NOT FOUND AUTOSCRIPT          \033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e ""
    echo -e "            \033[91;1mPERMISSION DENIED !\033[0m"
    echo -e "   \033[0;33mYour VPS\033[0m $ipsaya \033[0;33mHas been Banned\033[0m"
    echo -e "     \033[0;33mBuy access permissions for scripts\033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    exit
  fi
}
checking_sc
MYIP=$(curl -sS ipv4.icanhazip.com)
######################################
#IPVPS=$(curl -s ipv4.icanhazip.com)
#ISP=$(cat /etc/xray/isp)
#CITY=$(cat /etc/xray/city)
#domain=$(cat /etc/xray/domain)
#RAM=$(free -m | awk 'NR==2 {print $2}')
#MODEL=$(cat /etc/os-release | grep -w ID | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/ID//g')

#uptime="$(uptime -p | cut -d " " -f 2-10)"
#cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
#cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
#cpu_usage+=" %"
# // Gettings Info
function print_install() {
echo -e "${green} =============================== ${FONT}"
echo -e "${YELLOW} # $1 ${FONT}"
echo -e "${green} =============================== ${FONT}"
sleep 1
}
function print_success() {
if [[ 0 -eq $? ]]; then
echo -e "${green} =============================== ${FONT}"
echo -e "${Green} # $1 berhasil dipasang"
echo -e "${green} =============================== ${FONT}"
sleep 2
fi
}
function Rename() {
clear
echo -e "${YELLOW}----------------------------------------------------------${NC}"
echo -e "\033[96;1m                      Welcome To Script DENISA              \033[0m"
echo -e "${YELLOW}----------------------------------------------------------${NC}"
echo ""
sleep 3
echo -e "    ----------------------------------"
echo -e "   |\e[1;32mPlease Select a Options \e[0m|"
echo -e "    ----------------------------------"
echo -e "     \e[1;32m1)\e[0m Rename Script"
echo -e "     \e[1;32m2)\e[0m Default "
echo -e "   ------------------------------------"
read -p "   Please select numbers 1-2 or Any Button(Default) : " host
echo ""
if [[ $host == "1" ]]; then
clear
echo ""
echo ""
echo -e "   \e[1;36m_______________________________$NC"
echo -e "   \e[1;32m      CHANGES NAME SCRIPT $NC"
echo -e "   \e[1;36m_______________________________$NC"
echo -e ""
read -p "   INPUT YOUR NAME :   " host1
read -p "   INPUT PAS ADMIN :   " host11
rm /etc/xray/username
if [[ $host11 == 123admin ]]; then
echo $host1 >> /etc/xray/username
echo ""
clear
print_success "Rename Script"
sleep 3
menu
else
echo "DENISA" >> /etc/xray/username
clear
echo -e "${RED} Mohon Maaf Sepertinya Anda Bukan Owner ${NC}"
sleep 3
clear
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e "\033[42m          404 NOT FOUND AUTOSCRIPT          \033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e ""
    echo -e "            \033[91;1mPERMISSION DENIED !\033[0m"
    echo -e "     \033[0;33mBuy access permissions for scripts\033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    read -p "Press any key for exit"
    clear
    sleep 1
    print_success "Script Name Default"
    sleep 3
    menu
fi
elif [[ $host == "2" ]]; then
rm /etc/xray/username
echo "DENISA" >> /etc/xray/username
clear
print_success "Script Name Default"
sleep 3
menu
fi
}
######################################
# // USERNAME IZIN IPP
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/titis69/permission/main/alfa | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/titis69/permission/main/alfa | grep $MYIP | awk '{print $3}')
echo "$valid" > /usr/bin/e
clear
######################################
# // DETAIL ORDER IZIN IP
#username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
######################################
clear
# // DAYS LEFT
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
#certifacate=$(((d1 - d2) / 86400))
clear
######################################
# // GETTINGS SYSTEM
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

clear
######################################
# // RUNNING SSH
######################################
if [[ $ssh_service == "running" ]]; then 
   status_ssh="\033[97;1mON${NC}"
else
   status_ssh="\033[91;1mOFF${NC} "
fi
######################################
# // RUNNING WEBSOCKET
######################################
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="\033[97;1mON${NC}"
else
    status_ws_epro="\033[91;1mOFF${NC} "
fi
######################################
# RUNNING HAPROXY
######################################
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="\033[97;1mON${NC}"
else
   status_haproxy="\033[91;1mOFF${NC} "
fi
######################################
# RUNNING XRAY
######################################
if [[ $xray_service == "running" ]]; then 
   status_xray="\033[97;1mON${NC}"
else
   status_xray="\033[91;1mOFF${NC} "
fi
######################################
# RUNNING NGINX
######################################
if [[ $nginx_service == "running" ]]; then 
   status_nginx="\033[97;1mON${NC}"
else
   status_nginx="\033[91;1mOFF${NC} "
fi
######################################
# RUNNING DROPBEAR
######################################
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="\033[97;1mGOOD${NC}"
else
   status_dropbear="\033[91;1mCRAZY${NC} "
fi

# \\ Vless account //
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vless=$vlx/2
# \\ Vmess account //
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vmess=$vmc/2
# \\ Trojan account //
total_ssh="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
# \\ shadowsocks account //
ssx=$(grep -c -E "^#!# " "/etc/xray/config.json")
let ssa=$ssx/2
jumlah_noobz=$(grep -c -E "^### " "/etc/xray/noob")
# // DENISA | NB PROJECT
# // WHATSAPP : 082380835972
# // TELEGRAM : @denisastore32
# // VNSTAT
#LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
#cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
#cpu_usage="$((${cpu_usage1/\.*} / ${corediilik:-1}))"
#cpu_usage+=" %"
DATE2=$(date -R | cut -d " " -f -5)
vnstat_profile=$(vnstat | sed -n '3p' | awk '{print $1}' | grep -o '[^:]*')
vnstat -i ${vnstat_profile} >/etc/t1
bulan=$(date +%b)
tahun=$(date +%y)
ba=$(curl -s https://pastebin.com/raw/0gWiX6hE)
today=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
todayd=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
today_v=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $9}')
today_rx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $2}')
today_rxv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $3}')
today_tx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $5}')
today_txv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $6}')
if [ "$(grep -wc ${bulan} /etc/t1)" != '0' ]; then
bulan=$(date +%b)
month=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $9}')
month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $10}')
month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $3}')
month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $4}')
month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $6}')
month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $7}')
else
bulan2=$(date +%Y-%m)
month=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $8}')
month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $9}')
month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $2}')
month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $3}')
month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $5}')
month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $6}')
fi
if [ "$(grep -wc yesterday /etc/t1)" != '0' ]; then
yesterday=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $8}')
yesterday_v=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $9}')
yesterday_rx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $2}')
yesterday_rxv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $3}')
yesterday_tx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $5}')
yesterday_txv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $6}')
else
yesterday=NULL
yesterday_v=NULL
yesterday_rx=NULL
yesterday_rxv=NULL
yesterday_tx=NULL
yesterday_txv=NULL
fi
stat_noobz=$( systemctl status noobzvpns | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $stat_noobz == "running" ]]; then
    stat_noobz="\033[97;1mON${NC}"
else
    stat_noobz="\033[91;1mOFF${NC}"
    systemctl start noobzvpns
fi

function Newbie_Banner() {
clear
echo -e " \033[96;1m╭════════════════════════════════════════════════════════╮${NC}"
echo -e " \e[96;1m│\e[0m \033[1;37m                    $(cat /etc/xray/username)                       "
echo -e " \033[96;1m╰════════════════════════════════════════════════════════╯${NC}"
}



function Service_System_Operating() {
echo -e " \033[96;1m      ══════════════════════════════════════════════${NC}"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ DATE & TIME  \033[1;37m: ${WH}$DATE2 WIB${NC}"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ OS           \033[1;37m: $(cat /etc/os-release | grep -w ID | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/ID//g')     \033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ RAM          \033[1;37m: $(free -m | awk 'NR==2 {print $2}')    \033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ UPTIME       \033[1;37m: $(uptime -p | cut -d " " -f 2-10)\033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ ISP          \033[1;37m: $(cat /etc/xray/isp)    \033[0m "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ CITY         \033[1;37m: ${WH}$(cat /etc/xray/city)"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ CPU          \033[1;37m: \033[1;37m$CORE Core "
echo -e " \033[1;37m  $NC\033[1;37m    ❈ IP VPS       \033[1;37m: \033[1;37m$MYIP${NC}"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ DOMAIN       \033[1;37m: $(cat /etc/xray/domain)"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ CLIENTS      \033[1;37m: $(cat /usr/bin/user)"
echo -e " \033[1;37m  $NC\033[1;37m    ❈ MASA AKTIF   \033[1;37m: \033[0m\033[1;37m$(((d1 - d2) / 86400)) Hari /\033[0m \033[1;37m$useexp "
echo -e " \033[96;1m      ══════════════════════════════════════════════${NC}"
}



function Service_Status() {
echo -e " \033[96;1m╭═════════════════╮╭══════════════════╮╭═════════════════╮\033[0m"
echo -e " \033[96;1m│\033[0m\e[97m  SSH$NC : $status_ssh" "      \e[97m   NGINX$NC : $status_nginx" "      \e[97m   XRAY$NC : $status_xray     $NC  \e[96;1m│\e[0m" 
echo -e " \033[96;1m│\033[0m\e[97m  WS-ePRO$NC : $status_ws_epro" "  \e[97m   DROPBEAR$NC : $status_dropbear" " \e[97m   HAPROXY$NC : $status_haproxy  $NC  \e[96;1m│\e[0m" 
echo -e " \033[96;1m╰═════════════════╯╰══════════════════╯╰═════════════════╯\033[0m"
echo -e " \033[96;1m╭════════════════╮╭══════╮╭═════════════╮╭═══════════════╮${NC}"
echo -e " \033[96;1m│$NC   \033[96;1mMENU AKUN${NC}    \033[96;1m│$NC\033[96;1m${NC} \033[96;1mSTATUS ${NC} \033[96;1mTOTAL PREMIUM ${NC} \033[96;1mBANDWIDTH USED${NC}"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m01\033[96;1m]${NC}\033[96;1m• \033[1;37mSSH      \033[96;1m│$NC   ${status_ssh}${NC}     \033[1;37m$total_ssh \033[1;37mAccounts    ${NC}  \033[96;1mTODAY ${NC}"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m02\033[96;1m]${NC}\033[96;1m• \033[1;37mVMESS    \033[96;1m│$NC   \033[1;37m${status_xray}${NC}     \033[1;37m$vmess \033[1;37mAccounts    ${NC}  \033[1;37m$today_tx \033[1;37m$today_txv${NC}"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m03\033[96;1m]${NC}\033[96;1m• \033[1;37mVLESS    \033[96;1m│$NC   \033[1;37m${status_xray}${NC}     \033[1;37m$vless \033[1;37mAccounts    ${NC}  \033[96;1mYESTERDAY ${NC}"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m04\033[96;1m]${NC}\033[96;1m• \033[1;37mTROJAN   \033[96;1m│$NC   \033[1;37m${status_xray}${NC}     \033[1;37m$trb \033[1;37mAccounts    ${NC}  \033[1;37m$yesterday_tx \033[1;37m$yesterday_txv${NC}"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m05\033[96;1m]${NC}\033[96;1m• \033[1;37mNOOBZVPN \033[96;1m│$NC   \033[1;37m${stat_noobz}${NC}     \033[1;37m$jumlah_noobz \033[1;37mAccounts     ${NC} \033[96;1mTHIS MONTH ${NC}" 
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m06\033[96;1m]${NC}\033[96;1m• \033[1;37mSS-R     \033[96;1m│$NC   \033[1;37m${status_xray}${NC}     \033[1;37m$ssa \033[1;37mAccounts     ${NC} \033[1;37m$month_tx \033[1;37m$month_txv${NC}"
echo -e " \033[96;1m╰════════════════╯╰══════╯╰═════════════╯╰═══════════════╯${NC}"
}



function Acces_Use_Command() {
echo -e " \033[96;1m╭═══════════════════════════╮╭═══════════════════════════╮${NC}"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m07\033[96;1m]${NC}\033[96;1m• \033[1;37mRENAME SC           \033[96;1m││$NC \033[96;1m[\033[1;37m13\033[96;1m]${NC}\033[96;1m• \033[1;37mCEK UDP LOGIN       \033[96;1m│$NC"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m08\033[96;1m]${NC}\033[96;1m• \033[1;37mBOT TELEGRAM        \033[96;1m││$NC \033[96;1m[\033[1;37m14\033[96;1m]${NC}\033[96;1m• \033[1;37mDELETE ALL EXPIRED  \033[96;1m│$NC"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m09\033[96;1m]${NC}\033[96;1m• \033[1;37mUPDATE              \033[96;1m││$NC \033[96;1m[\033[1;37m15\033[96;1m]${NC}\033[96;1m• \033[1;37mBACKUP & RESTORE    \033[96;1m│$NC"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m10\033[96;1m]${NC}\033[96;1m• \033[1;37mMENU SYSTEM         \033[96;1m││$NC \033[96;1m[\033[1;37m16\033[96;1m]${NC}\033[96;1m• \033[1;37mCEK CPU VPS         \033[96;1m│$NC"   
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m11\033[96;1m]${NC}\033[96;1m• \033[1;37mEDIT UUID XRAY      \033[96;1m││$NC \033[96;1m[\033[1;37m17\033[96;1m]${NC}\033[96;1m• \033[1;37mRESTART             \033[96;1m│$NC"
echo -e " \033[96;1m│$NC \033[96;1m[\033[1;37m12\033[96;1m]${NC}\033[96;1m• \033[1;37mEDIT UUID TROJAN    \033[96;1m││$NC \033[96;1m[\033[1;37m18\033[96;1m]${NC}\033[96;1m• \033[1;37mREBOOT              \033[96;1m│$NC"
echo -e " \033[96;1m╰═══════════════════════════╯╰═══════════════════════════╯${NC}"
echo -e "\033[96;1m╭════════════════════ • \033[1;37mPANEL ADMIN VIP${NC}\033[96;1m • ════════════════╮${NC}"
echo -e "\033[96;1m│  \033[96;1m[\033[1;37m19\033[96;1m]${NC} \033[96;1m• \033[1;37mREGISTRASI IP \033[1;37m[\033[96;1mMENU\033[1;37m]                            \033[96;1m│ $NC"
echo -e "\033[96;1m╰═════════════════════════════════════════════════════════╯${NC}"
}



function Select_Display() {
echo
read -p "Select From option [1/9 or x] :  " hallo
case $hallo in
1) clear ; m-ssh ;; # menu ssh
2) clear ; m-vme ;; # menu vmess
3) clear ; m-vle ;; # menu vles
4) clear ; m-tro ;; # menu trojan
5) clear ; m-noobz ;; # menu noobzvps
6) clear ; m-ssr ;; # menu sadowsocks
7) clear ; Rename ;; # menu noobzvps
8) clear ; m-bot ;; # menu bot telegram
9) clear ; wget -q https://raw.githubusercontent.com/titis69/newsc/main/update.sh && bash update.sh ;; #Update script
10) clear ; m-ftr ;; # menu managers
11) clear ; uuid ;;
12) clear ; uuidtrojan ;;
13) clear ; cekudp ;; # limit ip on off
14) clear ; xp ;; # DELETE ALL EXPIRED
15) clear ; m-bkp ;; # menu backup
16) clear ; gotop ;;
17) clear ; reset ;;
18) clear ; reboot ;;
19) clear ; add-ip-bot ;; # Regissc
*) menu ;; # Back To Home menu
esac
}


Newbie_Banner
Service_System_Operating
Service_Status
Acces_Use_Command
Select_Display

